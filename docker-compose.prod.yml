version: '3.8'

services:
  text-to-audio:
    build: 
      context: .
      dockerfile: Dockerfile
    image: text-to-audio:latest
    container_name: text-to-audio-prod
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    volumes:
      # Гибкое монтирование данных через переменную окружения
      - ${DATA_PATH:-./data}:/app/data
      # Временные файлы в именованном volume
      - temp_data:/app/temp
    env_file:
      - .env.prod
    environment:
      # Yandex Cloud авторизация из .env.prod файла
      - YANDEX_KEY_ID=${YANDEX_KEY_ID}
      - YANDEX_SERVICE_ACCOUNT_ID=${YANDEX_SERVICE_ACCOUNT_ID}
      - YANDEX_KEY_ALGORITHM=${YANDEX_KEY_ALGORITHM}
      - YANDEX_PUBLIC_KEY=${YANDEX_PUBLIC_KEY}
      - YANDEX_PRIVATE_KEY=${YANDEX_PRIVATE_KEY}
      # Настройки логирования для production
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=${LOG_FORMAT}
      # Директории
      - TEMP_DIR=${TEMP_DIR}
      - INPUT_DIR=${INPUT_DIR}
      - OUTPUT_DIR=${OUTPUT_DIR}
      # Настройки синтеза речи
      - DEFAULT_VOICE=${DEFAULT_VOICE}
      - DEFAULT_ROLE=${DEFAULT_ROLE}
      - DEFAULT_FORMAT=${DEFAULT_FORMAT}
      # Настройки обработки
      - MAX_CHUNK_SIZE=${MAX_CHUNK_SIZE}
      - MAX_RETRIES=${MAX_RETRIES}
      - RETRY_DELAY=${RETRY_DELAY}
      # Настройки rate limiting
      - REQUESTS_PER_SECOND=${REQUESTS_PER_SECOND}
      # Production специфичные настройки
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT}
      - ENABLE_METRICS=${ENABLE_METRICS}
      - METRICS_PORT=${METRICS_PORT}
    networks:
      - text-to-audio-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"


volumes:
  temp_data:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=1g,uid=1000,gid=1000

networks:
  text-to-audio-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Конфигурация для Docker Swarm (опционально)
configs:
  app_config:
    external: true
    # docker config create app_config ./config/app.conf
